1.

b)

lab6_session/vector_add> /usr/bin/time ./vector_add.v8 > /dev/null
0.15user 0.00system 0:00.15elapsed 98%CPU (0avgtext+0avgdata 1536maxresident)k
0inputs+0outputs (0major+137minor)pagefaults 0swaps

lab6_session/vector_add> /usr/bin/time ./vector_add.v16 > /dev/null
0.30user 0.00system 0:00.31elapsed 99%CPU (0avgtext+0avgdata 1536maxresident)k
0inputs+0outputs (0major+137minor)pagefaults 0swaps

lab6_session/vector_add> /usr/bin/time ./vector_add.v32 > /dev/null
0.61user 0.00system 0:00.61elapsed 99%CPU (0avgtext+0avgdata 1536maxresident)k
0inputs+0outputs (0major+137minor)pagefaults 0swaps

A medida que aumenta el tamaño de los elementos, llenamos el registro vectorial con menos elementos y operamos con menos:

en el caso vector_add.v8, llenamos el reg vectorial con 16 elementos de 8 bits y sumamos de 16 en 16,

en el caso vector_add.v16, llenamos el reg vectorial con 8 elementos de 16 bits y sumamos de 8 en 8, tardando el doble.

c)

lab6_session/vector_add> /usr/bin/time ./vector_add.e8 > /dev/null 
2.65user 0.00system 0:02.67elapsed 99%CPU (0avgtext+0avgdata 1520maxresident)k
0inputs+0outputs (0major+136minor)pagefaults 0swaps

lab6_session/vector_add> /usr/bin/time ./vector_add.e16 > /dev/null
2.62user 0.00system 0:02.64elapsed 99%CPU (0avgtext+0avgdata 1568maxresident)k
0inputs+0outputs (0major+139minor)pagefaults 0swaps

lab6_session/vector_add> /usr/bin/time ./vector_add.e32 > /dev/null
2.64user 0.00system 0:02.65elapsed 99%CPU (0avgtext+0avgdata 1568maxresident)k
0inputs+0outputs (0major+139minor)pagefaults 0swaps

En el caso de los escalares, la diferencia de tiempo no es muy notable. Depende de las instrucciones addb, addw, addl.

2.

a)

lab6_session/vector_add> /usr/bin/time ./vector_add.v8 > /dev/null
0.15user 0.00system 0:00.16elapsed 98%CPU (0avgtext+0avgdata 1536maxresident)k
0inputs+0outputs (0major+137minor)pagefaults 0swaps

lab6_session/vector_add> /usr/bin/time ./vector_add.v16 > /dev/null
0.29user 0.00system 0:00.30elapsed 98%CPU (0avgtext+0avgdata 1552maxresident)k
0inputs+0outputs (0major+138minor)pagefaults 0swaps

lab6_session/vector_add> /usr/bin/time ./vector_add.v32 > /dev/null
0.59user 0.00system 0:00.60elapsed 99%CPU (0avgtext+0avgdata 1536maxresident)k
0inputs+0outputs (0major+137minor)pagefaults 0swaps

Los resultados son muy parecidos a los obtenidos con -O2 ya que optimizar más allá de SIMD...

b)

lab6_session/vector_add> /usr/bin/time ./vector_add.e8 > /dev/null
0.19user 0.00system 0:00.20elapsed 98%CPU (0avgtext+0avgdata 1504maxresident)k
0inputs+0outputs (0major+135minor)pagefaults 0swaps

lab6_session/vector_add> /usr/bin/time ./vector_add.e16 > /dev/null
0.38user 0.00system 0:00.38elapsed 98%CPU (0avgtext+0avgdata 1584maxresident)k
0inputs+0outputs (0major+140minor)pagefaults 0swaps

lab6_session/vector_add> /usr/bin/time ./vector_add.e32 > /dev/null
0.75user 0.00system 0:00.76elapsed 99%CPU (0avgtext+0avgdata 1568maxresident)k
0inputs+0outputs (0major+139minor)pagefaults 0swaps

Con -O3, el compilador hace vectorización y eso aumenta el rendimiento aunque los accesos son no alineados y tardan más que con a)

En ambos casos los tiempos son iguales

3.

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
 42.39      0.20     0.20                             transpose (transposition.c:9 @ 8048be9)
 21.74      0.30     0.10                             main (transposition.c:29 @ 8048cc2)
  8.70      0.34     0.04                             transpose (transposition.c:8 @ 8048c21)
  4.35      0.36     0.02                             __random_r (random_r.c:409 @ 8049b91)
  4.35      0.38     0.02                             random_r (random_r.c:364 @ 8049b40)
  2.17      0.39     0.01                             __random (random.c:296 @ 8049963)
  2.17      0.40     0.01                             __random (random.c:300 @ 8049996)
  2.17      0.41     0.01                             __random_r (random_r.c:367 @ 8049b5c)
  2.17      0.42     0.01                             __random_r (random_r.c:390 @ 8049b86)
  2.17      0.43     0.01                             __random_r (random_r.c:370 @ 8049b88)
  2.17      0.44     0.01                             random (random.c:293 @ 8049960)
  2.17      0.45     0.01                             setstate (random.c:276 @ 8049956)
  1.09      0.45     0.01                             __random_r (random_r.c:389 @ 8049b7d)
  1.09      0.46     0.01                             __random_r (random_r.c:388 @ 8049b80)
  1.09      0.46     0.01                             transpose (transposition.c:8 @ 8048be0)
  0.00      0.46     0.00        1     0.00     0.00  main (transposition.c:14 @ 8048c3b)
  0.00      0.46     0.00        1     0.00     0.00  transpose (transposition.c:5 @ 8048bcc)


b) version con blocking

 23.33      0.07     0.07                             main (transposition.c:35 @ 8048d01)
 20.00      0.13     0.06                             transpose (transposition.c:13 @ 8048bfc)
 11.67      0.17     0.04                             random_r (random_r.c:364 @ 8049b80)
  6.67      0.19     0.02                             __random_r (random_r.c:409 @ 8049bd1)
  6.67      0.21     0.02                             transpose (transposition.c:12 @ 8048c34)
  3.33      0.22     0.01                             __random (random.c:296 @ 80499a3)
  3.33      0.23     0.01                             __random (random.c:300 @ 80499d6)
  3.33      0.24     0.01                             __random_r (random_r.c:367 @ 8049b9c)
  3.33      0.25     0.01                             __random_r (random_r.c:386 @ 8049bb4)
  3.33      0.26     0.01                             __random_r (random_r.c:393 @ 8049bb8)
  3.33      0.27     0.01                             __random_r (random_r.c:389 @ 8049bbd)
  1.67      0.27     0.01                             __random_r (random_r.c:386 @ 8049bbb)
  1.67      0.28     0.01                             __random_r (random_r.c:388 @ 8049bc0)
  1.67      0.28     0.01                             __random_r (random_r.c:390 @ 8049bc2)
  1.67      0.29     0.01                             __random_r (random_r.c:388 @ 8049bc4)
  1.67      0.29     0.01                             __setstate_r (random_r.c:344 @ 8049b6b)
  1.67      0.30     0.01                             random (random.c:293 @ 80499a0)
  1.67      0.30     0.01                             setstate (random.c:276 @ 8049996)
  0.00      0.30     0.00        1     0.00     0.00  main (transposition.c:20 @ 8048c7a)
  0.00      0.30     0.00        1     0.00     0.00  transpose (transposition.c:7 @ 8048bcc)

c) version Eklund's

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
 61.40      0.70     0.70                             transpose (eklunds_transposition.c:24 @ 8048c97)
  6.58      0.78     0.08                             transpose (eklunds_transposition.c:22 @ 8048c78)
  6.14      0.85     0.07                             main (eklunds_transposition.c:61 @ 8048f50)
  6.14      0.92     0.07                             transpose (eklunds_transposition.c:20 @ 8048cfd)
  3.51      0.96     0.04                             transpose (eklunds_transposition.c:39 @ 8048e3a)
  2.63      0.99     0.03                             __random (random.c:296 @ 8049bf3)
  2.63      1.02     0.03                             __random_r (random_r.c:409 @ 8049e21)
  1.75      1.04     0.02                             __random (random.c:300 @ 8049c26)
  1.75      1.06     0.02                             main (eklunds_transposition.c:60 @ 8048f71)
  1.75      1.08     0.02                             random_r (random_r.c:364 @ 8049dd0)
  0.88      1.09     0.01                             __setstate_r (random_r.c:344 @ 8049dbb)
  0.88      1.10     0.01                             transpose (eklunds_transposition.c:25 @ 8048cde)
  0.88      1.11     0.01                             transpose (eklunds_transposition.c:37 @ 8048e72)
  0.44      1.11     0.01                             __random_r (random_r.c:372 @ 8049df8)
  0.44      1.12     0.01                             __random_r (random_r.c:381 @ 8049dfc)
  0.44      1.12     0.01                             __random_r (random_r.c:386 @ 8049e04)
  0.44      1.13     0.01                             __random_r (random_r.c:393 @ 8049e08)
  0.44      1.13     0.01                             __random_r (random_r.c:390 @ 8049e16)
  0.44      1.14     0.01                             __random_r (random_r.c:370 @ 8049e18)
  0.44      1.14     0.01                             transpose (eklunds_transposition.c:20 @ 8048c6a)
  0.00      1.14     0.00        1     0.00     0.00  main (eklunds_transposition.c:46 @ 8048ec9)
  0.00      1.14     0.00        1     0.00     0.00  transpose (eklunds_transposition.c:7 @ 8048bcc)

d) SIMD

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
 20.59      0.04     0.04                             random_r (random_r.c:364 @ 8049e20)
 17.65      0.07     0.03                             _mm_load_ps (xmmintrin.h:899 @ 8048f77)
 11.76      0.09     0.02                             __random_r (random_r.c:409 @ 8049e71)
 11.76      0.11     0.02                             _mm_load_ps (xmmintrin.h:899 @ 8048eee)
  5.88      0.12     0.01                             __random (random.c:296 @ 8049c43)
  5.88      0.13     0.01                             __random (random.c:300 @ 8049c76)
  5.88      0.14     0.01                             __random (random.c:303 @ 8049c8a)
  5.88      0.15     0.01                             __random_r (random_r.c:367 @ 8049e3c)
  2.94      0.15     0.01                             __random_r (random_r.c:389 @ 8049e5d)
  2.94      0.16     0.01                             __random_r (random_r.c:388 @ 8049e60)
  2.94      0.16     0.01                             __random_r (random_r.c:390 @ 8049e66)
  2.94      0.17     0.01                             __random_r (random_r.c:370 @ 8049e68)
  2.94      0.17     0.01                             __setstate_r (random_r.c:344 @ 8049e0b)
  0.00      0.17     0.00        1     0.00     0.00  main (transposition.c:45 @ 8048a40)
